// <auto-generated />
using System;
using DemoUserAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DemoUserAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DemoUserAPI.Models.Address", b =>
                {
                    b.Property<long>("UserID");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<string>("LineOne");

                    b.Property<string>("LineTwo");

                    b.Property<string>("PostalCode");

                    b.HasKey("UserID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DemoUserAPI.Models.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<long>("IdentityNumber");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DemoUserAPI.Models.Address", b =>
                {
                    b.HasOne("DemoUserAPI.Models.User", "User")
                        .WithOne("Address")
                        .HasForeignKey("DemoUserAPI.Models.Address", "UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
